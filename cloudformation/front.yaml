AWSTemplateFormatVersion: '2010-09-09'
Description: Frontend resources (S3, CloudFront, Route53)

Parameters:
  ReactBucketName:
    Type: String
    Description: Name for S3 bucket (must be globally unique)
  SubDomainName:
    Type: String
    Description: Sub-subdomain name
  HostedZoneId:
    Type: String
    Description: Route53 Hosted Zone ID for aws.jpe230.com domain
  RootStackName:
    Type: String
    Description: Name of the root stack for unique resource naming

Resources:
  # Main frontend S3 bucket
  ReactS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref ReactBucketName
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html
      CorsConfiguration:
        CorsRules:
          - AllowedMethods: [GET, HEAD]
            AllowedOrigins: ["*"]
            AllowedHeaders: ["*"]
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: false
        RestrictPublicBuckets: false

  # OAC for CLoufront to access S3 bucket
  OriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: !Sub "${RootStackName}-OAC"
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  # Entry point for stack: connects to S3 bucket and has a cache policy to route /apy/* requests to ALB
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Sub "${SubDomainName}.aws.jpe230.com"
        Origins:
          - Id: S3Origin
            DomainName: !GetAtt ReactS3Bucket.RegionalDomainName
            S3OriginConfig: {}
            OriginAccessControlId: !Ref OriginAccessControl
          - Id: ALBOrigin
            DomainName: !ImportValue LoadBalancerDNS
            CustomOriginConfig:
              OriginProtocolPolicy: https-only
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
          OriginRequestPolicyId: 88a5eaf4-2fd4-4709-b370-b4c650ea3fcf
        CacheBehaviors:
          - PathPattern: /api/*
            TargetOriginId: ALBOrigin
            ViewerProtocolPolicy: redirect-to-https
            AllowedMethods: [GET, HEAD, OPTIONS, PUT, POST, PATCH, DELETE]
            CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad
            OriginRequestPolicyId: 216adef6-5c7f-47e4-b989-5492eafa07d3
        Enabled: true
        DefaultRootObject: index.html
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
        ViewerCertificate:
          AcmCertificateArn: !ImportValue SSLCertificateArn
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2021
        PriceClass: PriceClass_100

  # Bucket policy to allow CloudFront to access the S3 bucket
  ReactBucketPolicy:
    Type: AWS::S3::BucketPolicy
    DependsOn: CloudFrontDistribution
    Properties:
      Bucket: !Ref ReactS3Bucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowCloudFrontServicePrincipal
            Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Action: s3:GetObject
            Resource: !Sub "${ReactS3Bucket.Arn}/*"
            Condition:
              StringEquals:
                "AWS:SourceArn": !Sub "arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution}"

  # Route53 record to point the subdomain to the CloudFront distribution
  Route53Record:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Sub "${SubDomainName}.aws.jpe230.com"
      Type: A
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2

Outputs:
  WebsiteURL:
    Description: URL of the website
    Value: !Sub "https://${SubDomainName}.aws.jpe230.com"
    Export:
      Name: WebsiteURL
  S3BucketName:
    Description: Name of the S3 bucket for frontend deployment
    Value: !Ref ReactS3Bucket
    Export:
      Name: S3BucketName
  CloudFrontDistributionId:
    Description: CloudFront Distribution ID
    Value: !Ref CloudFrontDistribution
    Export:
      Name: CloudFrontDistributionId
